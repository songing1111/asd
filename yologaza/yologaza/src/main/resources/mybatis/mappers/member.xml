<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
	<resultMap id="memResult" type="memberVO">
		<result property="uid" column="uid" />
		<result property="id" column="id" />
        <result property="pwd" column="pwd" />
        <result property="name" column="name" />
        <result property="email1" column="email1" />
        <result property="email2" column="email2" />
        <result property="hp" column="hp" />
        <result property="auth" column="auth" />
        <result property="joinDate" column="joinDate" />
	</resultMap> 
	<!-- 
	<resultMap id="memResult" type="java.util.HashMap">
      <result property="id" column="id" />
      <result property="pwd" column="pwd" />
      <result property="name" column="name" />
      <result property="email" column="email" />
      <result property="joinDate" column="joinDate" />
   </resultMap> -->


	<select id="selectAllMemberList" resultMap="memResult">
      <![CDATA[
         select * from member	order by joinDate asc 	
      ]]>
	</select>
	
	<select id="findId" resultMap="memResult">
      <![CDATA[
         select * from member where hp= #{hp}
      ]]>
	</select>
	
	<select id="findIdCheck" resultType="int">
		<![CDATA[
			select count(*) from member where hp= #{hp}
		]]>
	</select>
	
	<select id="selectOverlappedID" parameterType="String" resultType="String">
	   select if(count(*),'true','false')
	   from member
	   where id = #{id}
	</select>

	<select id="selectName" resultType="String">
    <![CDATA[
	select name from member
	where id = 'hong'			
    ]]>
	</select>
	
	<select id="selectPwd" resultType="int" >
	  <![CDATA[ 
	    select pwd from member 
	    where id = 'hong'
	 ]]>
	 </select> 
	 
	<select id="selectMemberById" resultType="memberVO"  parameterType="String" >
      <![CDATA[
         select * from member
         where
         id=#{id}			
      ]]>
	 </select>	
	
	<select id="selectMemberByPwd" resultMap="memResult"  parameterType="int" >
      <![CDATA[
         select * from member
         where
         pwd = #{pwd}			
      ]]>
    </select>
    
     <insert id="insertMember"  parameterType="memberVO">
		<![CDATA[
		 insert into member(id,pwd, name, email1, email2, hp, auth)
		 values(#{id}, #{pwd}, #{name}, #{email1}, #{email2}, #{hp}, "1")
		]]>      
	</insert>
	
	<insert id="insertMember2"  parameterType="java.util.HashMap">
		<![CDATA[
		 insert into member(id,pwd, name, email1, email2, hp, auth)
		 values(#{id}, #{pwd}, #{name}, #{email1}, #{email2}, #{hp}, "1")
		]]>      
   </insert>
   
   <update id="updateMember"  parameterType="memberVO">
     <![CDATA[
	     update member
	     set pwd=#{pwd}, name=#{name}, email=#{email}
	     where
	     id=#{id}
      ]]>      
   </update> 
     
   <delete id="deleteMember"  parameterType="String">
	<![CDATA[
	   delete from  member
	   where
	   id=#{id}
	]]>      
  </delete>
	
	
	<!-- 동적 SQL문 -->
  <select id="searchMember" parameterType="memberVO" resultMap="memResult">
      <![CDATA[
          select * from member
      ]]>
      <where>
         <if test=" name != ''  and  name != null">
            name=#{name}
         </if>
         <if test="email != ''  and email != null ">
           and email = #{email}
         </if>
      </where>
      order by joinDate desc
  </select>
  
 <!--  
   <sql id="a">
    <![CDATA[
      select * from member
     ]]> 
   </sql>  -->  
  
<!--    
  <select id="searchMember" parameterType="memberVO" resultMap="memResult">
	     <include refid="a" /> 
	   <![CDATA[
         select * from member 
      ]]>
	  
       <where>
		  <choose>
		      <when test="name != '' and name != null and  email != '' and email != null">
			     name=#{name} and email=#{email}
		      </when>
		      <when test="name != '' and name != null">
			     name = #{name}
		      </when>
		      <when test="email !='' and email != null">
			    email = #{email}
		      </when>
	      </choose>
       </where>
       order by joinDate desc
   </select> -->
   
   <select id="foreachSelect" resultMap="memResult" parameterType="java.util.Map">
      <!-- <include refid="a" /> -->
      <![CDATA[
        select * from member 
          
      ]]>
      
      where name in
      <foreach item="item" collection="list" open="(" separator="," close=")" >
         #{item}
      </foreach>
      order by joinDate desc
   </select>
   
   <insert id="foreachInsert"  parameterType="java.util.Map">
		insert into member(uid, id, pwd, name, email1, email2, hp, auth)
		values
		<foreach item="item" collection="list" separator=",">
			(#{item.id},
			#{item.pwd},
			#{item.name},
			#{item.email1},
			#{item.email2},
			#{item.hp},
			#{item.auth})
		</foreach>
   </insert>

	<select id="loginById" resultType="memberVO"  parameterType="memberVO" >
      <![CDATA[
         select * from member
         where id = #{id} and pwd = #{pwd}
      ]]>
    </select>

</mapper>